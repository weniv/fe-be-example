# ========================================
# 환경변수 설정 템플릿
# ========================================
# 이 파일을 복사하여 .env 파일을 만드세요: cp .env.example .env
# ⚠️ 중요: .env 파일은 Git에 올리지 마세요!

# ========================================
# 🔐 JWT 보안 설정
# ========================================
# JWT 토큰 서명을 위한 비밀 키
# 프로덕션에서는 반드시 복잡하고 안전한 키로 변경하세요!
SECRET_KEY=your-super-secret-jwt-key-change-in-production-minimum-32-characters

# ========================================
# 💾 데이터베이스 설정
# ========================================

# 로컬 개발용 SQLite (기본값)
DATABASE_URL=sqlite:///./todos.db

# AWS Lightsail PostgreSQL 사용 시 (아래 주석 해제 후 실제 값으로 변경)
# DATABASE_URL=postgresql://username:password@your-db-host:5432/todos_db

# 개별 데이터베이스 설정 (GitHub Actions 배포 시 사용)
# DB_USER=your_database_username
# DB_PASSWORD=your_database_password
# DB_HOST=your-lightsail-database-host.region.rds.amazonaws.com
# DB_PORT=5432
# DB_NAME=todos_db

# ========================================
# 🌐 애플리케이션 설정
# ========================================

# FastAPI 실행 환경 (development, staging, production)
ENVIRONMENT=development

# 애플리케이션 호스트 및 포트
HOST=0.0.0.0
PORT=8000

# ========================================
# 📝 사용 예시
# ========================================

# 1. 로컬 개발 환경:
#    - DATABASE_URL=sqlite:///./todos.db 사용
#    - SECRET_KEY만 설정하면 됨

# 2. AWS Lightsail 배포:
#    - DATABASE_URL을 PostgreSQL URL로 변경
#    - DB_* 변수들도 설정 (GitHub Actions에서 사용)

# 3. 프로덕션 환경:
#    - SECRET_KEY를 강력한 랜덤 문자열로 변경
#    - ENVIRONMENT=production으로 설정
#    - DATABASE_URL을 실제 프로덕션 DB로 설정

# ========================================
# 🔧 유용한 명령어들
# ========================================

# 강력한 시크릿 키 생성 (Python):
# python -c "import secrets; print(secrets.token_urlsafe(32))"

# PostgreSQL 연결 URL 형식:
# postgresql://사용자명:비밀번호@호스트:포트/데이터베이스명